/* FUNÇÕES DE AGREGACAO NUMERICAS*/

USE PROJETO;

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    SEXO CHAR(1),
    JANEIRO FLOAT(10,2),
    FEVEREIRO FLOAT(10, 2)
    
);

INSERT INTO VENDEDORES VALUES(NULL,'CARLOS','M',7878787.48,8848474.87);
INSERT INTO VENDEDORES VALUES(NULL,'MARIA','F',7878787.48,8884848.87);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO','M',7878787.48,8484784.87);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA','F',7878787.48,8884847.87);
INSERT INTO VENDEDORES VALUES(NULL,'IVONE','F',7878787.48,8884784.87);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO','F',7878787.48,8884784.87);

/*MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;

/*MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/*AVG - TRAZ O VALOR MEDIA DE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MEDIA_FEV
FROM VENDEDORES;

/*VARIAS FUNCOES*/
SELECT MAX(FEVEREIRO) AS MAIOR_FEV,
	MIN(FEVEREIRO) AS MENOR_FEV,
	TRUNCATE(AVG(FEVEREIRO), 2) AS MEDIA_FEV
	FROM VENDEDORES;
    
/*SOMA*/

SELECT SUM(JANEIRO) AS TOTAL_SUM FROM VENDEDORES;

SELECT SUM(FEVEREIRO) AS TOTAL FROM VENDEDORES
GROUP BY SEXO;

/*SUBQUERY*/
/* VENDEOR QUE VENDEU MENOS EM FEVEREIRO
E O SEU NOME*/
SELECT NOME, MIN(FEVEREIRO) AS MIN_MARCO FROM VENDEDORES GROUP BY NOME;
SELECT * FROM VENDEDORES;

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO = (SELECT MIN(FEVEREIRO) FROM VENDEDORES);

/* VENDEOR QUE VENDEU MAIS EM FEVEREIRO
E O SEU NOME*/
SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO = (SELECT MAX(FEVEREIRO) FROM VENDEDORES);

/* VENDEOR QUE VENDEU MAIS DO QUE A MÉDIA FEVEREIRO
E O SEU NOME*/

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO < (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

/*OPERAÇÕES EM LINHAS */

SELECT NOME, JANEIRO, FEVEREIRO, (JANEIRO+FEVEREIRO) AS "TOTAL",
TRUNCATE((JANEIRO+FEVEREIRO)/2,2) AS "MEDIA"
FROM VENDEDORES;

/*ALTERANDO TABELA*/
CREATE TABLE TABELA(
	COLUNA1 VARCHAR(30),
    COLUNA2 VARCHAR(30),
    COLUNA3 VARCHAR(30)
);

#ADICIONA UMA PK 
ALTER TABLE TABELA
ADD PRIMARY KEY (COLUNA1);

# ADICIONANDO COLUNA SEM POSICAO. ULTIMA POSICAO
ALTER TABLE TABELA
ADD COLUNA VARCHAR(30);

ALTER TABLE TABELA
ADD COLUNA100 INT;

# ADICIONANDO UMA COLUNA COM POSICAO
ALTER TABLE TABELA
ADD COLUMN COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;

# MODIFICANDO O TIPO DE CAMPO
ALTER TABLE TABELA MODIFY COLUNA2 DATE NOT NULL;

# RENOMEANDO O NOME DA TABELA
ALTER TABLE TABELA RENAME PESSOA;

CREATE TABLE TIME(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
    TIME VARCHAR(30),
    ID_PESSOA VARCHAR(30)
);

# FOREIGN KEY
ALTER TABLE TIME
ADD FOREIGN KEY(ID_PESSOA)
REFERENCES PESSOA(COLUNA1);

/* ORGANIZACAO DE CHAVES - CONSTRAINT (REGRA) */

CREATE TABLE JOGADOR(
	IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30)
);

CREATE TABLE TIMES(
	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
    NOMETIME VARCHAR(30),
    ID_JOGADOR INT,
    FOREIGN KEY(ID_JOGADOR)
    REFERENCES JOGADOR(IDJOGADOR)
);

INSERT INTO JOGADOR VALUES(NULL,'GUERRERO');
INSERT INTO TIMES VALUES(NULL,'FLAMENGO',1);

SELECT * FROM JOGADOR;
SELECT * FROM TIMES;

CREATE TABLE CLIENTE(
	IDCLIENTE INT,
    NOME VARCHAR(30) NOT NULL
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT,
    TIPO CHAR(3) NOT NULL,
    NUMERO VARCHAR(10) NOT NULL,
    ID_CLIENTE INT
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY(IDCLIENTE);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);


/* DICIONARIO DE DADOS */










